// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_in_loop_sca (
        node_in_strm_V_dout,
        node_in_strm_V_empty_n,
        node_in_strm_V_read,
        node_bram_address0,
        node_bram_ce0,
        node_bram_d0,
        node_bram_q0,
        node_bram_we0,
        node_bram_address1,
        node_bram_ce1,
        node_bram_d1,
        node_bram_q1,
        node_bram_we1,
        metadata_strm_V_dout,
        metadata_strm_V_empty_n,
        metadata_strm_V_read,
        edge_strm_V_src_V_dout,
        edge_strm_V_src_V_empty_n,
        edge_strm_V_src_V_read,
        edge_strm_V_dst_V_dout,
        edge_strm_V_dst_V_empty_n,
        edge_strm_V_dst_V_read,
        edge_strm_V_c_dout,
        edge_strm_V_c_empty_n,
        edge_strm_V_c_read,
        msg_out_strm_V_din,
        msg_out_strm_V_full_n,
        msg_out_strm_V_write,
        wt_address0,
        wt_ce0,
        wt_d0,
        wt_q0,
        wt_we0,
        ap_clk,
        ap_rst,
        ap_done,
        node_bram_i_address0,
        node_bram_i_ce0,
        node_bram_i_q0,
        node_bram_i_address1,
        node_bram_i_ce1,
        node_bram_i_we1,
        node_bram_i_d1,
        node_bram_t_address0,
        node_bram_t_ce0,
        node_bram_t_q0,
        node_bram_t_address1,
        node_bram_t_ce1,
        node_bram_t_we1,
        node_bram_t_d1,
        ap_start,
        ap_ready,
        ap_idle,
        ap_continue
);

parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;

input  [31:0] node_in_strm_V_dout;
input   node_in_strm_V_empty_n;
output   node_in_strm_V_read;
output  [15:0] node_bram_address0;
output   node_bram_ce0;
output  [31:0] node_bram_d0;
input  [31:0] node_bram_q0;
output   node_bram_we0;
output  [15:0] node_bram_address1;
output   node_bram_ce1;
output  [31:0] node_bram_d1;
input  [31:0] node_bram_q1;
output   node_bram_we1;
input  [63:0] metadata_strm_V_dout;
input   metadata_strm_V_empty_n;
output   metadata_strm_V_read;
input  [11:0] edge_strm_V_src_V_dout;
input   edge_strm_V_src_V_empty_n;
output   edge_strm_V_src_V_read;
input  [11:0] edge_strm_V_dst_V_dout;
input   edge_strm_V_dst_V_empty_n;
output   edge_strm_V_dst_V_read;
input  [31:0] edge_strm_V_c_dout;
input   edge_strm_V_c_empty_n;
output   edge_strm_V_c_read;
output  [31:0] msg_out_strm_V_din;
input   msg_out_strm_V_full_n;
output   msg_out_strm_V_write;
output  [14:0] wt_address0;
output   wt_ce0;
output  [31:0] wt_d0;
input  [31:0] wt_q0;
output   wt_we0;
input   ap_clk;
input   ap_rst;
output   ap_done;
input  [15:0] node_bram_i_address0;
input   node_bram_i_ce0;
output  [31:0] node_bram_i_q0;
input  [15:0] node_bram_i_address1;
input   node_bram_i_ce1;
input   node_bram_i_we1;
input  [31:0] node_bram_i_d1;
input  [15:0] node_bram_t_address0;
input   node_bram_t_ce0;
output  [31:0] node_bram_t_q0;
input  [15:0] node_bram_t_address1;
input   node_bram_t_ce1;
input   node_bram_t_we1;
input  [31:0] node_bram_t_d1;
input   ap_start;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    node_load_U0_ap_start;
wire    node_load_U0_ap_done;
wire    node_load_U0_ap_continue;
wire    node_load_U0_ap_idle;
wire    node_load_U0_ap_ready;
wire    node_load_U0_node_in_strm_V_read;
wire   [15:0] node_load_U0_node_bram_address1;
wire    node_load_U0_node_bram_ce1;
wire    node_load_U0_node_bram_we1;
wire   [31:0] node_load_U0_node_bram_d1;
wire    ap_channel_done_node_bram;
wire    node_load_U0_node_bram_full_n;
wire    scatter_inner_proc_U0_ap_start;
wire    scatter_inner_proc_U0_ap_done;
wire    scatter_inner_proc_U0_ap_continue;
wire    scatter_inner_proc_U0_ap_idle;
wire    scatter_inner_proc_U0_ap_ready;
wire    scatter_inner_proc_U0_metadata_strm_V_read;
wire   [15:0] scatter_inner_proc_U0_node_bram_address0;
wire    scatter_inner_proc_U0_node_bram_ce0;
wire    scatter_inner_proc_U0_edge_strm_V_src_V_read;
wire    scatter_inner_proc_U0_edge_strm_V_dst_V_read;
wire    scatter_inner_proc_U0_edge_strm_V_c_read;
wire   [31:0] scatter_inner_proc_U0_msg_out_strm_V_din;
wire    scatter_inner_proc_U0_msg_out_strm_V_write;
wire   [14:0] scatter_inner_proc_U0_wt_address0;
wire    scatter_inner_proc_U0_wt_ce0;
wire    ap_hs_continue;
wire    node_bram_i_full_n;
wire    node_bram_t_empty_n;
wire   [15:0] node_bram_i_address1_x;
wire    node_bram_i_ce1_x;
wire   [31:0] node_bram_i_d1_x;
wire    node_bram_i_we1_x;
wire   [15:0] node_bram_t_address0_x;
wire    node_bram_t_ce0_x;
wire   [31:0] node_bram_t_d0;
wire   [31:0] node_bram_t_q0_x;
wire    node_bram_t_we0;
wire    ap_hs_done;
wire    ap_hs_ready;
reg    ap_sync_reg_node_load_U0_ap_ready;
wire    ap_sync_node_load_U0_ap_ready;
reg   [1:0] node_load_U0_ap_ready_count;
reg    ap_sync_reg_scatter_inner_proc_U0_ap_ready;
wire    ap_sync_scatter_inner_proc_U0_ap_ready;
reg   [1:0] scatter_inner_proc_U0_ap_ready_count;
wire    ap_sync_node_load_U0_ap_start;
wire    ap_sync_scatter_inner_proc_U0_ap_start;

// power-on initialization
initial begin
#0 ap_sync_reg_node_load_U0_ap_ready = 1'b0;
#0 node_load_U0_ap_ready_count = 2'b00;
#0 ap_sync_reg_scatter_inner_proc_U0_ap_ready = 1'b0;
#0 scatter_inner_proc_U0_ap_ready_count = 2'b00;
end

node_load node_load_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(node_load_U0_ap_start),
    .ap_done(node_load_U0_ap_done),
    .ap_continue(node_load_U0_ap_continue),
    .ap_idle(node_load_U0_ap_idle),
    .ap_ready(node_load_U0_ap_ready),
    .node_in_strm_V_dout(node_in_strm_V_dout),
    .node_in_strm_V_empty_n(node_in_strm_V_empty_n),
    .node_in_strm_V_read(node_load_U0_node_in_strm_V_read),
    .node_bram_address1(node_load_U0_node_bram_address1),
    .node_bram_ce1(node_load_U0_node_bram_ce1),
    .node_bram_we1(node_load_U0_node_bram_we1),
    .node_bram_d1(node_load_U0_node_bram_d1)
);

scatter_inner_proc scatter_inner_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(scatter_inner_proc_U0_ap_start),
    .ap_done(scatter_inner_proc_U0_ap_done),
    .ap_continue(scatter_inner_proc_U0_ap_continue),
    .ap_idle(scatter_inner_proc_U0_ap_idle),
    .ap_ready(scatter_inner_proc_U0_ap_ready),
    .metadata_strm_V_dout(metadata_strm_V_dout),
    .metadata_strm_V_empty_n(metadata_strm_V_empty_n),
    .metadata_strm_V_read(scatter_inner_proc_U0_metadata_strm_V_read),
    .node_bram_address0(scatter_inner_proc_U0_node_bram_address0),
    .node_bram_ce0(scatter_inner_proc_U0_node_bram_ce0),
    .node_bram_q0(node_bram_t_q0_x),
    .edge_strm_V_src_V_dout(edge_strm_V_src_V_dout),
    .edge_strm_V_src_V_empty_n(edge_strm_V_src_V_empty_n),
    .edge_strm_V_src_V_read(scatter_inner_proc_U0_edge_strm_V_src_V_read),
    .edge_strm_V_dst_V_dout(edge_strm_V_dst_V_dout),
    .edge_strm_V_dst_V_empty_n(edge_strm_V_dst_V_empty_n),
    .edge_strm_V_dst_V_read(scatter_inner_proc_U0_edge_strm_V_dst_V_read),
    .edge_strm_V_c_dout(edge_strm_V_c_dout),
    .edge_strm_V_c_empty_n(edge_strm_V_c_empty_n),
    .edge_strm_V_c_read(scatter_inner_proc_U0_edge_strm_V_c_read),
    .msg_out_strm_V_din(scatter_inner_proc_U0_msg_out_strm_V_din),
    .msg_out_strm_V_full_n(msg_out_strm_V_full_n),
    .msg_out_strm_V_write(scatter_inner_proc_U0_msg_out_strm_V_write),
    .wt_address0(scatter_inner_proc_U0_wt_address0),
    .wt_ce0(scatter_inner_proc_U0_wt_ce0),
    .wt_q0(wt_q0)
);

dataflow_in_loop_g8j #(
    .DataWidth( 32 ),
    .AddressRange( 45856 ),
    .AddressWidth( 16 ))
node_bram_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(node_bram_i_address0),
    .i_ce0(node_bram_i_ce0),
    .i_q0(node_bram_i_q0),
    .i_address1(node_bram_i_address1),
    .i_ce1(node_bram_i_ce1),
    .i_we1(node_bram_i_we1),
    .i_d1(node_bram_i_d1),
    .t_address0(node_bram_t_address0),
    .t_ce0(node_bram_t_ce0),
    .t_q0(node_bram_t_q0),
    .t_address1(node_bram_t_address1),
    .t_ce1(node_bram_t_ce1),
    .t_we1(node_bram_t_we1),
    .t_d1(node_bram_t_d1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(node_bram_i_full_n),
    .i_write(node_load_U0_ap_done),
    .t_empty_n(node_bram_t_empty_n),
    .t_read(scatter_inner_proc_U0_ap_ready)
);

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_node_load_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_hs_ready))) begin
            ap_sync_reg_node_load_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_node_load_U0_ap_ready <= ap_sync_node_load_U0_ap_ready;
        end
    end
end

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_scatter_inner_proc_U0_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == (ap_start & ap_hs_ready))) begin
            ap_sync_reg_scatter_inner_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_scatter_inner_proc_U0_ap_ready <= ap_sync_scatter_inner_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == node_load_U0_ap_ready) & (1'b1 == ap_hs_ready))) begin
        node_load_U0_ap_ready_count <= (node_load_U0_ap_ready_count - ap_const_lv2_1);
    end else if (((node_load_U0_ap_ready == 1'b1) & (1'b0 == ap_hs_ready))) begin
        node_load_U0_ap_ready_count <= (node_load_U0_ap_ready_count + ap_const_lv2_1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_hs_ready) & (1'b0 == scatter_inner_proc_U0_ap_ready))) begin
        scatter_inner_proc_U0_ap_ready_count <= (scatter_inner_proc_U0_ap_ready_count - ap_const_lv2_1);
    end else if (((1'b0 == ap_hs_ready) & (1'b1 == scatter_inner_proc_U0_ap_ready))) begin
        scatter_inner_proc_U0_ap_ready_count <= (scatter_inner_proc_U0_ap_ready_count + ap_const_lv2_1);
    end
end

assign ap_channel_done_node_bram = node_load_U0_ap_done;

assign ap_done = scatter_inner_proc_U0_ap_done;

assign ap_hs_continue = ap_continue;

assign ap_hs_done = scatter_inner_proc_U0_ap_done;

assign ap_hs_ready = (ap_sync_node_load_U0_ap_ready & ap_sync_scatter_inner_proc_U0_ap_ready);

assign ap_idle = (node_load_U0_ap_idle & scatter_inner_proc_U0_ap_idle & (node_bram_t_empty_n ^ 1'b1));

assign ap_ready = ap_hs_ready;

assign ap_sync_node_load_U0_ap_ready = (node_load_U0_ap_ready | ap_sync_reg_node_load_U0_ap_ready);

assign ap_sync_node_load_U0_ap_start = (ap_start & (ap_sync_reg_node_load_U0_ap_ready ^ 1'b1));

assign ap_sync_scatter_inner_proc_U0_ap_ready = (scatter_inner_proc_U0_ap_ready | ap_sync_reg_scatter_inner_proc_U0_ap_ready);

assign ap_sync_scatter_inner_proc_U0_ap_start = (ap_start & (ap_sync_reg_scatter_inner_proc_U0_ap_ready ^ 1'b1));

assign edge_strm_V_c_read = scatter_inner_proc_U0_edge_strm_V_c_read;

assign edge_strm_V_dst_V_read = scatter_inner_proc_U0_edge_strm_V_dst_V_read;

assign edge_strm_V_src_V_read = scatter_inner_proc_U0_edge_strm_V_src_V_read;

assign metadata_strm_V_read = scatter_inner_proc_U0_metadata_strm_V_read;

assign msg_out_strm_V_din = scatter_inner_proc_U0_msg_out_strm_V_din;

assign msg_out_strm_V_write = scatter_inner_proc_U0_msg_out_strm_V_write;

assign node_bram_address0 = ap_const_lv16_0;

assign node_bram_address1 = ap_const_lv16_0;

assign node_bram_ce0 = 1'b0;

assign node_bram_ce1 = 1'b0;

assign node_bram_d0 = ap_const_lv32_0;

assign node_bram_d1 = ap_const_lv32_0;

assign node_bram_i_address1_x = node_load_U0_node_bram_address1;

assign node_bram_i_ce1_x = node_load_U0_node_bram_ce1;

assign node_bram_i_d1_x = node_load_U0_node_bram_d1;

assign node_bram_i_we1_x = node_load_U0_node_bram_we1;

assign node_bram_t_address0_x = scatter_inner_proc_U0_node_bram_address0;

assign node_bram_t_ce0_x = scatter_inner_proc_U0_node_bram_ce0;

assign node_bram_t_d0 = ap_const_lv32_0;

assign node_bram_t_q0_x = ap_const_lv32_0;

assign node_bram_t_we0 = 1'b0;

assign node_bram_we0 = 1'b0;

assign node_bram_we1 = 1'b0;

assign node_in_strm_V_read = node_load_U0_node_in_strm_V_read;

assign node_load_U0_ap_continue = node_bram_i_full_n;

assign node_load_U0_ap_start = ap_sync_node_load_U0_ap_start;

assign node_load_U0_node_bram_full_n = node_bram_i_full_n;

assign scatter_inner_proc_U0_ap_continue = ap_continue;

assign scatter_inner_proc_U0_ap_start = (node_bram_t_empty_n & ap_sync_scatter_inner_proc_U0_ap_start);

assign wt_address0 = scatter_inner_proc_U0_wt_address0;

assign wt_ce0 = scatter_inner_proc_U0_wt_ce0;

assign wt_d0 = ap_const_lv32_0;

assign wt_we0 = 1'b0;

endmodule //dataflow_in_loop_sca
