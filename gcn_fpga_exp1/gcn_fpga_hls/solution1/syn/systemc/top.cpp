// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> top::ap_ST_fsm_state1 = "1";
const sc_lv<21> top::ap_ST_fsm_state2 = "10";
const sc_lv<21> top::ap_ST_fsm_state3 = "100";
const sc_lv<21> top::ap_ST_fsm_state4 = "1000";
const sc_lv<21> top::ap_ST_fsm_state5 = "10000";
const sc_lv<21> top::ap_ST_fsm_state6 = "100000";
const sc_lv<21> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<21> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<21> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<21> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<21> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<21> top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<21> top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<21> top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<21> top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<21> top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<21> top::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<21> top::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<21> top::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<21> top::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<21> top::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<32> top::ap_const_lv32_6 = "110";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_8 = "1000";
const sc_lv<32> top::ap_const_lv32_7 = "111";
const sc_lv<32> top::ap_const_lv32_14 = "10100";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<32> top::ap_const_lv32_10 = "10000";
const sc_lv<32> top::ap_const_lv32_12 = "10010";
const sc_lv<32> top::ap_const_lv32_13 = "10011";
const sc_lv<7> top::ap_const_lv7_0 = "0000000";
const sc_lv<5> top::ap_const_lv5_0 = "00000";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<6> top::ap_const_lv6_0 = "000000";
const sc_lv<16> top::ap_const_lv16_0 = "0000000000000000";
const sc_lv<11> top::ap_const_lv11_0 = "00000000000";
const sc_lv<32> top::ap_const_lv32_11 = "10001";
const sc_lv<64> top::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_9 = "1001";
const sc_lv<7> top::ap_const_lv7_55 = "1010101";
const sc_lv<7> top::ap_const_lv7_1 = "1";
const sc_lv<5> top::ap_const_lv5_1 = "1";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<4> top::ap_const_lv4_F = "1111";
const sc_lv<5> top::ap_const_lv5_1F = "11111";
const sc_lv<16> top::ap_const_lv16_599 = "10110011001";
const sc_lv<6> top::ap_const_lv6_20 = "100000";
const sc_lv<6> top::ap_const_lv6_1 = "1";
const sc_lv<11> top::ap_const_lv11_599 = "10110011001";
const sc_lv<11> top::ap_const_lv11_1 = "1";
const sc_lv<32> top::ap_const_lv32_20 = "100000";
const sc_lv<32> top::ap_const_lv32_3F = "111111";
const sc_lv<5> top::ap_const_lv5_10 = "10000";
const sc_lv<15> top::ap_const_lv15_0 = "000000000000000";

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    node_in_bram_U = new top_node_in_bram("node_in_bram_U");
    node_in_bram_U->clk(ap_clk);
    node_in_bram_U->reset(ap_rst);
    node_in_bram_U->address0(node_in_bram_address0);
    node_in_bram_U->ce0(node_in_bram_ce0);
    node_in_bram_U->we0(node_in_bram_we0);
    node_in_bram_U->d0(node_in_strm_V_dout);
    node_in_bram_U->q0(node_in_bram_q0);
    node_out_bram_U = new top_node_out_bram("node_out_bram_U");
    node_out_bram_U->clk(ap_clk);
    node_out_bram_U->reset(ap_rst);
    node_out_bram_U->address0(node_out_bram_address0);
    node_out_bram_U->ce0(node_out_bram_ce0);
    node_out_bram_U->we0(node_out_bram_we0);
    node_out_bram_U->d0(node_out_bram_d0);
    node_out_bram_U->q0(node_out_bram_q0);
    top_fadd_32ns_32nbkb_U1 = new top_fadd_32ns_32nbkb<1,8,32,32,32>("top_fadd_32ns_32nbkb_U1");
    top_fadd_32ns_32nbkb_U1->clk(ap_clk);
    top_fadd_32ns_32nbkb_U1->reset(ap_rst);
    top_fadd_32ns_32nbkb_U1->din0(tmp_c_reg_667);
    top_fadd_32ns_32nbkb_U1->din1(node_in_bram_load_reg_649);
    top_fadd_32ns_32nbkb_U1->ce(ap_var_for_const0);
    top_fadd_32ns_32nbkb_U1->dout(grp_fu_386_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_clk_pos_reset_);
    dont_initialize();
    sensitive << ( ap_rst.pos() );
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_390_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_390_p2 );

    SC_METHOD(thread_col_1_fu_571_p2);
    sensitive << ( col2_reg_375 );

    SC_METHOD(thread_col_2_fu_475_p2);
    sensitive << ( col_reg_342 );

    SC_METHOD(thread_dst_1_fu_396_p2);
    sensitive << ( dst_reg_274 );

    SC_METHOD(thread_edge_strm_V_c0_status);
    sensitive << ( edge_strm_V_src_V_empty_n );
    sensitive << ( edge_strm_V_dst_V_empty_n );
    sensitive << ( edge_strm_V_c_empty_n );

    SC_METHOD(thread_edge_strm_V_c0_update);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond6_fu_506_p2 );
    sensitive << ( edge_strm_V_c0_status );

    SC_METHOD(thread_edge_strm_V_c_blk_n);
    sensitive << ( edge_strm_V_c_empty_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond6_fu_506_p2 );

    SC_METHOD(thread_edge_strm_V_c_read);
    sensitive << ( edge_strm_V_c0_update );

    SC_METHOD(thread_edge_strm_V_dst_V_blk_n);
    sensitive << ( edge_strm_V_dst_V_empty_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond6_fu_506_p2 );

    SC_METHOD(thread_edge_strm_V_dst_V_read);
    sensitive << ( edge_strm_V_c0_update );

    SC_METHOD(thread_edge_strm_V_src_V_blk_n);
    sensitive << ( edge_strm_V_src_V_empty_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond6_fu_506_p2 );

    SC_METHOD(thread_edge_strm_V_src_V_read);
    sensitive << ( edge_strm_V_c0_update );

    SC_METHOD(thread_exitcond1_fu_390_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( dst_reg_274 );

    SC_METHOD(thread_exitcond2_fu_439_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( src_reg_308 );

    SC_METHOD(thread_exitcond3_fu_541_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( row1_reg_364 );

    SC_METHOD(thread_exitcond4_fu_457_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( row_reg_319 );

    SC_METHOD(thread_exitcond5_fu_469_p2);
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_469_p2 );
    sensitive << ( col_reg_342 );

    SC_METHOD(thread_exitcond6_fu_506_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond6_fu_506_p2 );
    sensitive << ( tmp_s_reg_654 );
    sensitive << ( edge_strm_V_c0_status );
    sensitive << ( i_reg_353 );

    SC_METHOD(thread_exitcond_fu_565_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( col2_reg_375 );

    SC_METHOD(thread_i_1_fu_511_p2);
    sensitive << ( i_reg_353 );

    SC_METHOD(thread_indvarinc1_fu_408_p2);
    sensitive << ( invdar1_reg_297 );

    SC_METHOD(thread_indvarinc_fu_402_p2);
    sensitive << ( invdar_reg_285 );

    SC_METHOD(thread_metadata_strm_V_blk_n);
    sensitive << ( metadata_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_metadata_strm_V_read);
    sensitive << ( metadata_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_next_mul_fu_451_p2);
    sensitive << ( phi_mul_reg_330 );

    SC_METHOD(thread_node_in_bram_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_20_cast_fu_491_p1 );

    SC_METHOD(thread_node_in_bram_ce0);
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_469_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_node_in_bram_we0);
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_469_p2 );

    SC_METHOD(thread_node_in_strm_V_blk_n);
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_469_p2 );

    SC_METHOD(thread_node_in_strm_V_read);
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_469_p2 );

    SC_METHOD(thread_node_out_bram_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_1_fu_422_p1 );
    sensitive << ( tmp_11_fu_536_p1 );
    sensitive << ( tmp_15_cast_fu_586_p1 );

    SC_METHOD(thread_node_out_bram_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_node_out_bram_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_reg_677 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_node_out_bram_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_node_out_strm_V_blk_n);
    sensitive << ( node_out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_node_out_strm_V_din);
    sensitive << ( node_out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( node_out_bram_q0 );

    SC_METHOD(thread_node_out_strm_V_write);
    sensitive << ( node_out_strm_V_full_n );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_row_1_fu_547_p2);
    sensitive << ( row1_reg_364 );

    SC_METHOD(thread_row_2_fu_463_p2);
    sensitive << ( row_reg_319 );

    SC_METHOD(thread_src_1_fu_445_p2);
    sensitive << ( src_reg_308 );

    SC_METHOD(thread_tmp_10_cast_fu_481_p1);
    sensitive << ( col_reg_342 );

    SC_METHOD(thread_tmp_10_fu_529_p3);
    sensitive << ( tmp_9_reg_672 );

    SC_METHOD(thread_tmp_11_fu_536_p1);
    sensitive << ( tmp_10_fu_529_p3 );

    SC_METHOD(thread_tmp_13_fu_485_p2);
    sensitive << ( phi_mul_reg_330 );
    sensitive << ( tmp_10_cast_fu_481_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_586_p1);
    sensitive << ( tmp_6_fu_581_p2 );

    SC_METHOD(thread_tmp_1_fu_422_p1);
    sensitive << ( tmp_fu_414_p3 );

    SC_METHOD(thread_tmp_20_cast_fu_491_p1);
    sensitive << ( tmp_13_fu_485_p2 );

    SC_METHOD(thread_tmp_2_fu_427_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( invdar1_reg_297 );

    SC_METHOD(thread_tmp_3_fu_433_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( invdar_reg_285 );
    sensitive << ( tmp_2_fu_427_p2 );

    SC_METHOD(thread_tmp_5_fu_553_p3);
    sensitive << ( row1_reg_364 );

    SC_METHOD(thread_tmp_6_fu_581_p2);
    sensitive << ( tmp_9_cast_reg_690 );
    sensitive << ( tmp_cast_fu_577_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_561_p1);
    sensitive << ( tmp_5_fu_553_p3 );

    SC_METHOD(thread_tmp_9_fu_525_p1);
    sensitive << ( edge_strm_V_dst_V_dout );

    SC_METHOD(thread_tmp_cast_fu_577_p1);
    sensitive << ( col2_reg_375 );

    SC_METHOD(thread_tmp_fu_414_p3);
    sensitive << ( invdar_reg_285 );
    sensitive << ( invdar1_reg_297 );

    SC_METHOD(thread_wt_address0);

    SC_METHOD(thread_wt_ce0);

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( node_in_strm_V_empty_n );
    sensitive << ( metadata_strm_V_empty_n );
    sensitive << ( node_out_strm_V_full_n );
    sensitive << ( exitcond5_fu_469_p2 );
    sensitive << ( exitcond6_fu_506_p2 );
    sensitive << ( edge_strm_V_c0_status );
    sensitive << ( exitcond3_fu_541_p2 );
    sensitive << ( exitcond_fu_565_p2 );
    sensitive << ( tmp_3_fu_433_p2 );
    sensitive << ( tmp_2_fu_427_p2 );
    sensitive << ( exitcond1_fu_390_p2 );
    sensitive << ( exitcond2_fu_439_p2 );
    sensitive << ( exitcond4_fu_457_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, node_in_strm_V_dout, "(port)node_in_strm_V_dout");
    sc_trace(mVcdFile, node_in_strm_V_empty_n, "(port)node_in_strm_V_empty_n");
    sc_trace(mVcdFile, node_in_strm_V_read, "(port)node_in_strm_V_read");
    sc_trace(mVcdFile, edge_strm_V_src_V_dout, "(port)edge_strm_V_src_V_dout");
    sc_trace(mVcdFile, edge_strm_V_src_V_empty_n, "(port)edge_strm_V_src_V_empty_n");
    sc_trace(mVcdFile, edge_strm_V_src_V_read, "(port)edge_strm_V_src_V_read");
    sc_trace(mVcdFile, edge_strm_V_dst_V_dout, "(port)edge_strm_V_dst_V_dout");
    sc_trace(mVcdFile, edge_strm_V_dst_V_empty_n, "(port)edge_strm_V_dst_V_empty_n");
    sc_trace(mVcdFile, edge_strm_V_dst_V_read, "(port)edge_strm_V_dst_V_read");
    sc_trace(mVcdFile, edge_strm_V_c_dout, "(port)edge_strm_V_c_dout");
    sc_trace(mVcdFile, edge_strm_V_c_empty_n, "(port)edge_strm_V_c_empty_n");
    sc_trace(mVcdFile, edge_strm_V_c_read, "(port)edge_strm_V_c_read");
    sc_trace(mVcdFile, metadata_strm_V_dout, "(port)metadata_strm_V_dout");
    sc_trace(mVcdFile, metadata_strm_V_empty_n, "(port)metadata_strm_V_empty_n");
    sc_trace(mVcdFile, metadata_strm_V_read, "(port)metadata_strm_V_read");
    sc_trace(mVcdFile, node_out_strm_V_din, "(port)node_out_strm_V_din");
    sc_trace(mVcdFile, node_out_strm_V_full_n, "(port)node_out_strm_V_full_n");
    sc_trace(mVcdFile, node_out_strm_V_write, "(port)node_out_strm_V_write");
    sc_trace(mVcdFile, wt_address0, "(port)wt_address0");
    sc_trace(mVcdFile, wt_ce0, "(port)wt_ce0");
    sc_trace(mVcdFile, wt_q0, "(port)wt_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, node_in_strm_V_blk_n, "node_in_strm_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond5_fu_469_p2, "exitcond5_fu_469_p2");
    sc_trace(mVcdFile, edge_strm_V_src_V_blk_n, "edge_strm_V_src_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond6_fu_506_p2, "exitcond6_fu_506_p2");
    sc_trace(mVcdFile, edge_strm_V_dst_V_blk_n, "edge_strm_V_dst_V_blk_n");
    sc_trace(mVcdFile, edge_strm_V_c_blk_n, "edge_strm_V_c_blk_n");
    sc_trace(mVcdFile, metadata_strm_V_blk_n, "metadata_strm_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, node_out_strm_V_blk_n, "node_out_strm_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, dst_1_fu_396_p2, "dst_1_fu_396_p2");
    sc_trace(mVcdFile, dst_1_reg_599, "dst_1_reg_599");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, indvarinc_fu_402_p2, "indvarinc_fu_402_p2");
    sc_trace(mVcdFile, indvarinc_reg_604, "indvarinc_reg_604");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, indvarinc1_fu_408_p2, "indvarinc1_fu_408_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, src_1_fu_445_p2, "src_1_fu_445_p2");
    sc_trace(mVcdFile, src_1_reg_623, "src_1_reg_623");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, next_mul_fu_451_p2, "next_mul_fu_451_p2");
    sc_trace(mVcdFile, next_mul_reg_628, "next_mul_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, row_2_fu_463_p2, "row_2_fu_463_p2");
    sc_trace(mVcdFile, row_2_reg_636, "row_2_reg_636");
    sc_trace(mVcdFile, col_2_fu_475_p2, "col_2_fu_475_p2");
    sc_trace(mVcdFile, node_in_bram_q0, "node_in_bram_q0");
    sc_trace(mVcdFile, node_in_bram_load_reg_649, "node_in_bram_load_reg_649");
    sc_trace(mVcdFile, tmp_s_reg_654, "tmp_s_reg_654");
    sc_trace(mVcdFile, i_1_fu_511_p2, "i_1_fu_511_p2");
    sc_trace(mVcdFile, i_1_reg_662, "i_1_reg_662");
    sc_trace(mVcdFile, edge_strm_V_c0_status, "edge_strm_V_c0_status");
    sc_trace(mVcdFile, tmp_c_reg_667, "tmp_c_reg_667");
    sc_trace(mVcdFile, tmp_9_fu_525_p1, "tmp_9_fu_525_p1");
    sc_trace(mVcdFile, tmp_9_reg_672, "tmp_9_reg_672");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, tmp_8_reg_677, "tmp_8_reg_677");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, row_1_fu_547_p2, "row_1_fu_547_p2");
    sc_trace(mVcdFile, row_1_reg_685, "row_1_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_9_cast_fu_561_p1, "tmp_9_cast_fu_561_p1");
    sc_trace(mVcdFile, tmp_9_cast_reg_690, "tmp_9_cast_reg_690");
    sc_trace(mVcdFile, exitcond3_fu_541_p2, "exitcond3_fu_541_p2");
    sc_trace(mVcdFile, col_1_fu_571_p2, "col_1_fu_571_p2");
    sc_trace(mVcdFile, col_1_reg_698, "col_1_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond_fu_565_p2, "exitcond_fu_565_p2");
    sc_trace(mVcdFile, node_in_bram_address0, "node_in_bram_address0");
    sc_trace(mVcdFile, node_in_bram_ce0, "node_in_bram_ce0");
    sc_trace(mVcdFile, node_in_bram_we0, "node_in_bram_we0");
    sc_trace(mVcdFile, node_out_bram_address0, "node_out_bram_address0");
    sc_trace(mVcdFile, node_out_bram_ce0, "node_out_bram_ce0");
    sc_trace(mVcdFile, node_out_bram_we0, "node_out_bram_we0");
    sc_trace(mVcdFile, node_out_bram_d0, "node_out_bram_d0");
    sc_trace(mVcdFile, node_out_bram_q0, "node_out_bram_q0");
    sc_trace(mVcdFile, dst_reg_274, "dst_reg_274");
    sc_trace(mVcdFile, invdar_reg_285, "invdar_reg_285");
    sc_trace(mVcdFile, tmp_3_fu_433_p2, "tmp_3_fu_433_p2");
    sc_trace(mVcdFile, tmp_2_fu_427_p2, "tmp_2_fu_427_p2");
    sc_trace(mVcdFile, exitcond1_fu_390_p2, "exitcond1_fu_390_p2");
    sc_trace(mVcdFile, invdar1_reg_297, "invdar1_reg_297");
    sc_trace(mVcdFile, src_reg_308, "src_reg_308");
    sc_trace(mVcdFile, row_reg_319, "row_reg_319");
    sc_trace(mVcdFile, exitcond2_fu_439_p2, "exitcond2_fu_439_p2");
    sc_trace(mVcdFile, phi_mul_reg_330, "phi_mul_reg_330");
    sc_trace(mVcdFile, col_reg_342, "col_reg_342");
    sc_trace(mVcdFile, exitcond4_fu_457_p2, "exitcond4_fu_457_p2");
    sc_trace(mVcdFile, i_reg_353, "i_reg_353");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, row1_reg_364, "row1_reg_364");
    sc_trace(mVcdFile, col2_reg_375, "col2_reg_375");
    sc_trace(mVcdFile, tmp_1_fu_422_p1, "tmp_1_fu_422_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_491_p1, "tmp_20_cast_fu_491_p1");
    sc_trace(mVcdFile, tmp_11_fu_536_p1, "tmp_11_fu_536_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_586_p1, "tmp_15_cast_fu_586_p1");
    sc_trace(mVcdFile, edge_strm_V_c0_update, "edge_strm_V_c0_update");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_fu_414_p3, "tmp_fu_414_p3");
    sc_trace(mVcdFile, tmp_10_cast_fu_481_p1, "tmp_10_cast_fu_481_p1");
    sc_trace(mVcdFile, tmp_13_fu_485_p2, "tmp_13_fu_485_p2");
    sc_trace(mVcdFile, tmp_10_fu_529_p3, "tmp_10_fu_529_p3");
    sc_trace(mVcdFile, tmp_5_fu_553_p3, "tmp_5_fu_553_p3");
    sc_trace(mVcdFile, tmp_cast_fu_577_p1, "tmp_cast_fu_577_p1");
    sc_trace(mVcdFile, tmp_6_fu_581_p2, "tmp_6_fu_581_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete node_in_bram_U;
    delete node_out_bram_U;
    delete top_fadd_32ns_32nbkb_U1;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_541_p2.read()))) {
        col2_reg_375 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
                !esl_seteq<1,1,1>(node_out_strm_V_full_n.read(), ap_const_logic_0))) {
        col2_reg_375 = col_1_reg_698.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_457_p2.read()))) {
        col_reg_342 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)))) {
        col_reg_342 = col_2_fu_475_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_541_p2.read()))) {
        dst_reg_274 = dst_1_reg_599.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        dst_reg_274 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        i_reg_353 = i_1_reg_662.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                !esl_seteq<1,1,1>(metadata_strm_V_empty_n.read(), ap_const_logic_0))) {
        i_reg_353 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_427_p2.read()))) {
        invdar1_reg_297 = indvarinc1_fu_408_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        invdar1_reg_297 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_390_p2.read()))) {
        invdar_reg_285 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_433_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_427_p2.read()))) {
        invdar_reg_285 = indvarinc_reg_604.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_439_p2.read()))) {
        phi_mul_reg_330 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)) && 
                !esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_330 = next_mul_reg_628.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_439_p2.read()))) {
        row1_reg_364 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_565_p2.read()))) {
        row1_reg_364 = row_1_reg_685.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_439_p2.read()))) {
        row_reg_319 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)) && 
                !esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0))) {
        row_reg_319 = row_2_reg_636.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_427_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_433_p2.read()))) {
        src_reg_308 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()))) {
        src_reg_308 = src_1_reg_623.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        col_1_reg_698 = col_1_fu_571_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        dst_1_reg_599 = dst_1_fu_396_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)))) {
        i_1_reg_662 = i_1_fu_511_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        indvarinc_reg_604 = indvarinc_fu_402_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        next_mul_reg_628 = next_mul_fu_451_p2.read();
        row_2_reg_636 = row_2_fu_463_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && !esl_seteq<1,1,1>(metadata_strm_V_empty_n.read(), ap_const_logic_0))) {
        node_in_bram_load_reg_649 = node_in_bram_q0.read();
        tmp_s_reg_654 = metadata_strm_V_dout.read().range(63, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        row_1_reg_685 = row_1_fu_547_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        src_1_reg_623 = src_1_fu_445_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        tmp_8_reg_677 = grp_fu_386_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_541_p2.read()))) {
        tmp_9_cast_reg_690 = tmp_9_cast_fu_561_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)))) {
        tmp_9_reg_672 = tmp_9_fu_525_p1.read();
        tmp_c_reg_667 = edge_strm_V_c_dout.read();
    }
}

void top::thread_ap_clk_pos_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void top::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void top::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void top::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void top::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void top::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_390_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_390_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_col_1_fu_571_p2() {
    col_1_fu_571_p2 = (!col2_reg_375.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(col2_reg_375.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void top::thread_col_2_fu_475_p2() {
    col_2_fu_475_p2 = (!col_reg_342.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(col_reg_342.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void top::thread_dst_1_fu_396_p2() {
    dst_1_fu_396_p2 = (!dst_reg_274.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(dst_reg_274.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void top::thread_edge_strm_V_c0_status() {
    edge_strm_V_c0_status = (edge_strm_V_src_V_empty_n.read() & edge_strm_V_dst_V_empty_n.read() & edge_strm_V_c_empty_n.read());
}

void top::thread_edge_strm_V_c0_update() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)))) {
        edge_strm_V_c0_update = ap_const_logic_1;
    } else {
        edge_strm_V_c0_update = ap_const_logic_0;
    }
}

void top::thread_edge_strm_V_c_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()))) {
        edge_strm_V_c_blk_n = edge_strm_V_c_empty_n.read();
    } else {
        edge_strm_V_c_blk_n = ap_const_logic_1;
    }
}

void top::thread_edge_strm_V_c_read() {
    edge_strm_V_c_read = edge_strm_V_c0_update.read();
}

void top::thread_edge_strm_V_dst_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()))) {
        edge_strm_V_dst_V_blk_n = edge_strm_V_dst_V_empty_n.read();
    } else {
        edge_strm_V_dst_V_blk_n = ap_const_logic_1;
    }
}

void top::thread_edge_strm_V_dst_V_read() {
    edge_strm_V_dst_V_read = edge_strm_V_c0_update.read();
}

void top::thread_edge_strm_V_src_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()))) {
        edge_strm_V_src_V_blk_n = edge_strm_V_src_V_empty_n.read();
    } else {
        edge_strm_V_src_V_blk_n = ap_const_logic_1;
    }
}

void top::thread_edge_strm_V_src_V_read() {
    edge_strm_V_src_V_read = edge_strm_V_c0_update.read();
}

void top::thread_exitcond1_fu_390_p2() {
    exitcond1_fu_390_p2 = (!dst_reg_274.read().is_01() || !ap_const_lv7_55.is_01())? sc_lv<1>(): sc_lv<1>(dst_reg_274.read() == ap_const_lv7_55);
}

void top::thread_exitcond2_fu_439_p2() {
    exitcond2_fu_439_p2 = (!src_reg_308.read().is_01() || !ap_const_lv7_55.is_01())? sc_lv<1>(): sc_lv<1>(src_reg_308.read() == ap_const_lv7_55);
}

void top::thread_exitcond3_fu_541_p2() {
    exitcond3_fu_541_p2 = (!row1_reg_364.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(row1_reg_364.read() == ap_const_lv6_20);
}

void top::thread_exitcond4_fu_457_p2() {
    exitcond4_fu_457_p2 = (!row_reg_319.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_319.read() == ap_const_lv6_20);
}

void top::thread_exitcond5_fu_469_p2() {
    exitcond5_fu_469_p2 = (!col_reg_342.read().is_01() || !ap_const_lv11_599.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_342.read() == ap_const_lv11_599);
}

void top::thread_exitcond6_fu_506_p2() {
    exitcond6_fu_506_p2 = (!i_reg_353.read().is_01() || !tmp_s_reg_654.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_353.read() == tmp_s_reg_654.read());
}

void top::thread_exitcond_fu_565_p2() {
    exitcond_fu_565_p2 = (!col2_reg_375.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(col2_reg_375.read() == ap_const_lv5_10);
}

void top::thread_i_1_fu_511_p2() {
    i_1_fu_511_p2 = (!i_reg_353.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_353.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void top::thread_indvarinc1_fu_408_p2() {
    indvarinc1_fu_408_p2 = (!invdar1_reg_297.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(invdar1_reg_297.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_indvarinc_fu_402_p2() {
    indvarinc_fu_402_p2 = (!invdar_reg_285.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(invdar_reg_285.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void top::thread_metadata_strm_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        metadata_strm_V_blk_n = metadata_strm_V_empty_n.read();
    } else {
        metadata_strm_V_blk_n = ap_const_logic_1;
    }
}

void top::thread_metadata_strm_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(metadata_strm_V_empty_n.read(), ap_const_logic_0))) {
        metadata_strm_V_read = ap_const_logic_1;
    } else {
        metadata_strm_V_read = ap_const_logic_0;
    }
}

void top::thread_next_mul_fu_451_p2() {
    next_mul_fu_451_p2 = (!phi_mul_reg_330.read().is_01() || !ap_const_lv16_599.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_330.read()) + sc_biguint<16>(ap_const_lv16_599));
}

void top::thread_node_in_bram_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        node_in_bram_address0 =  (sc_lv<16>) (tmp_20_cast_fu_491_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        node_in_bram_address0 =  (sc_lv<16>) (ap_const_lv64_0);
    } else {
        node_in_bram_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void top::thread_node_in_bram_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0))))) {
        node_in_bram_ce0 = ap_const_logic_1;
    } else {
        node_in_bram_ce0 = ap_const_logic_0;
    }
}

void top::thread_node_in_bram_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0))))) {
        node_in_bram_we0 = ap_const_logic_1;
    } else {
        node_in_bram_we0 = ap_const_logic_0;
    }
}

void top::thread_node_in_strm_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0))) {
        node_in_strm_V_blk_n = node_in_strm_V_empty_n.read();
    } else {
        node_in_strm_V_blk_n = ap_const_logic_1;
    }
}

void top::thread_node_in_strm_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)))) {
        node_in_strm_V_read = ap_const_logic_1;
    } else {
        node_in_strm_V_read = ap_const_logic_0;
    }
}

void top::thread_node_out_bram_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        node_out_bram_address0 =  (sc_lv<9>) (tmp_15_cast_fu_586_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        node_out_bram_address0 =  (sc_lv<9>) (tmp_11_fu_536_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        node_out_bram_address0 =  (sc_lv<9>) (tmp_1_fu_422_p1.read());
    } else {
        node_out_bram_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void top::thread_node_out_bram_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        node_out_bram_ce0 = ap_const_logic_1;
    } else {
        node_out_bram_ce0 = ap_const_logic_0;
    }
}

void top::thread_node_out_bram_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        node_out_bram_d0 = tmp_8_reg_677.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        node_out_bram_d0 = ap_const_lv32_0;
    } else {
        node_out_bram_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_node_out_bram_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        node_out_bram_we0 = ap_const_logic_1;
    } else {
        node_out_bram_we0 = ap_const_logic_0;
    }
}

void top::thread_node_out_strm_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        node_out_strm_V_blk_n = node_out_strm_V_full_n.read();
    } else {
        node_out_strm_V_blk_n = ap_const_logic_1;
    }
}

void top::thread_node_out_strm_V_din() {
    node_out_strm_V_din = node_out_bram_q0.read();
}

void top::thread_node_out_strm_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
         !esl_seteq<1,1,1>(node_out_strm_V_full_n.read(), ap_const_logic_0))) {
        node_out_strm_V_write = ap_const_logic_1;
    } else {
        node_out_strm_V_write = ap_const_logic_0;
    }
}

void top::thread_row_1_fu_547_p2() {
    row_1_fu_547_p2 = (!row1_reg_364.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(row1_reg_364.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void top::thread_row_2_fu_463_p2() {
    row_2_fu_463_p2 = (!row_reg_319.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(row_reg_319.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void top::thread_src_1_fu_445_p2() {
    src_1_fu_445_p2 = (!src_reg_308.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(src_reg_308.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void top::thread_tmp_10_cast_fu_481_p1() {
    tmp_10_cast_fu_481_p1 = esl_zext<16,11>(col_reg_342.read());
}

void top::thread_tmp_10_fu_529_p3() {
    tmp_10_fu_529_p3 = esl_concat<5,4>(tmp_9_reg_672.read(), ap_const_lv4_0);
}

void top::thread_tmp_11_fu_536_p1() {
    tmp_11_fu_536_p1 = esl_zext<64,9>(tmp_10_fu_529_p3.read());
}

void top::thread_tmp_13_fu_485_p2() {
    tmp_13_fu_485_p2 = (!phi_mul_reg_330.read().is_01() || !tmp_10_cast_fu_481_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_330.read()) + sc_biguint<16>(tmp_10_cast_fu_481_p1.read()));
}

void top::thread_tmp_15_cast_fu_586_p1() {
    tmp_15_cast_fu_586_p1 = esl_zext<64,11>(tmp_6_fu_581_p2.read());
}

void top::thread_tmp_1_fu_422_p1() {
    tmp_1_fu_422_p1 = esl_zext<64,9>(tmp_fu_414_p3.read());
}

void top::thread_tmp_20_cast_fu_491_p1() {
    tmp_20_cast_fu_491_p1 = esl_zext<64,16>(tmp_13_fu_485_p2.read());
}

void top::thread_tmp_2_fu_427_p2() {
    tmp_2_fu_427_p2 = (!invdar1_reg_297.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(invdar1_reg_297.read() == ap_const_lv4_F);
}

void top::thread_tmp_3_fu_433_p2() {
    tmp_3_fu_433_p2 = (!invdar_reg_285.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_285.read() == ap_const_lv5_1F);
}

void top::thread_tmp_5_fu_553_p3() {
    tmp_5_fu_553_p3 = esl_concat<6,4>(row1_reg_364.read(), ap_const_lv4_0);
}

void top::thread_tmp_6_fu_581_p2() {
    tmp_6_fu_581_p2 = (!tmp_9_cast_reg_690.read().is_01() || !tmp_cast_fu_577_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_9_cast_reg_690.read()) + sc_biguint<11>(tmp_cast_fu_577_p1.read()));
}

void top::thread_tmp_9_cast_fu_561_p1() {
    tmp_9_cast_fu_561_p1 = esl_zext<11,10>(tmp_5_fu_553_p3.read());
}

void top::thread_tmp_9_fu_525_p1() {
    tmp_9_fu_525_p1 = edge_strm_V_dst_V_dout.read().range(5-1, 0);
}

void top::thread_tmp_cast_fu_577_p1() {
    tmp_cast_fu_577_p1 = esl_zext<11,5>(col2_reg_375.read());
}

void top::thread_tmp_fu_414_p3() {
    tmp_fu_414_p3 = esl_concat<5,4>(invdar_reg_285.read(), invdar1_reg_297.read());
}

void top::thread_wt_address0() {
    wt_address0 = ap_const_lv15_0;
}

void top::thread_wt_ce0() {
    wt_ce0 = ap_const_logic_0;
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_390_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_427_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_433_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_433_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_427_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_439_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_457_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond5_fu_469_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(node_in_strm_V_empty_n.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(metadata_strm_V_empty_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_506_p2.read()) && esl_seteq<1,1,1>(edge_strm_V_c0_status.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 262144 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_541_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_565_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            if (!esl_seteq<1,1,1>(node_out_strm_V_full_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"node_in_strm_V_dout\" :  \"" << node_in_strm_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"node_in_strm_V_empty_n\" :  \"" << node_in_strm_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_in_strm_V_read\" :  \"" << node_in_strm_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_src_V_dout\" :  \"" << edge_strm_V_src_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_src_V_empty_n\" :  \"" << edge_strm_V_src_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"edge_strm_V_src_V_read\" :  \"" << edge_strm_V_src_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_dst_V_dout\" :  \"" << edge_strm_V_dst_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_dst_V_empty_n\" :  \"" << edge_strm_V_dst_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"edge_strm_V_dst_V_read\" :  \"" << edge_strm_V_dst_V_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_c_dout\" :  \"" << edge_strm_V_c_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"edge_strm_V_c_empty_n\" :  \"" << edge_strm_V_c_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"edge_strm_V_c_read\" :  \"" << edge_strm_V_c_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"metadata_strm_V_dout\" :  \"" << metadata_strm_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"metadata_strm_V_empty_n\" :  \"" << metadata_strm_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"metadata_strm_V_read\" :  \"" << metadata_strm_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_out_strm_V_din\" :  \"" << node_out_strm_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"node_out_strm_V_full_n\" :  \"" << node_out_strm_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"node_out_strm_V_write\" :  \"" << node_out_strm_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"wt_address0\" :  \"" << wt_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"wt_ce0\" :  \"" << wt_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"wt_q0\" :  \"" << wt_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

