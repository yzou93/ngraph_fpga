// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.454000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=129,HLS_SYN_DSP=2,HLS_SYN_FF=639,HLS_SYN_LUT=580}" *)

module top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        node_in_strm_V_dout,
        node_in_strm_V_empty_n,
        node_in_strm_V_read,
        edge_strm_V_src_V_dout,
        edge_strm_V_src_V_empty_n,
        edge_strm_V_src_V_read,
        edge_strm_V_dst_V_dout,
        edge_strm_V_dst_V_empty_n,
        edge_strm_V_dst_V_read,
        edge_strm_V_c_dout,
        edge_strm_V_c_empty_n,
        edge_strm_V_c_read,
        metadata_strm_V_dout,
        metadata_strm_V_empty_n,
        metadata_strm_V_read,
        node_out_strm_V_din,
        node_out_strm_V_full_n,
        node_out_strm_V_write,
        wt_address0,
        wt_ce0,
        wt_q0
);

parameter    ap_ST_fsm_state1 = 21'b1;
parameter    ap_ST_fsm_state2 = 21'b10;
parameter    ap_ST_fsm_state3 = 21'b100;
parameter    ap_ST_fsm_state4 = 21'b1000;
parameter    ap_ST_fsm_state5 = 21'b10000;
parameter    ap_ST_fsm_state6 = 21'b100000;
parameter    ap_ST_fsm_state7 = 21'b1000000;
parameter    ap_ST_fsm_state8 = 21'b10000000;
parameter    ap_ST_fsm_state9 = 21'b100000000;
parameter    ap_ST_fsm_state10 = 21'b1000000000;
parameter    ap_ST_fsm_state11 = 21'b10000000000;
parameter    ap_ST_fsm_state12 = 21'b100000000000;
parameter    ap_ST_fsm_state13 = 21'b1000000000000;
parameter    ap_ST_fsm_state14 = 21'b10000000000000;
parameter    ap_ST_fsm_state15 = 21'b100000000000000;
parameter    ap_ST_fsm_state16 = 21'b1000000000000000;
parameter    ap_ST_fsm_state17 = 21'b10000000000000000;
parameter    ap_ST_fsm_state18 = 21'b100000000000000000;
parameter    ap_ST_fsm_state19 = 21'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 21'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 21'b100000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv7_55 = 7'b1010101;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_1F = 5'b11111;
parameter    ap_const_lv16_599 = 16'b10110011001;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv11_599 = 11'b10110011001;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv15_0 = 15'b000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] node_in_strm_V_dout;
input   node_in_strm_V_empty_n;
output   node_in_strm_V_read;
input  [11:0] edge_strm_V_src_V_dout;
input   edge_strm_V_src_V_empty_n;
output   edge_strm_V_src_V_read;
input  [11:0] edge_strm_V_dst_V_dout;
input   edge_strm_V_dst_V_empty_n;
output   edge_strm_V_dst_V_read;
input  [31:0] edge_strm_V_c_dout;
input   edge_strm_V_c_empty_n;
output   edge_strm_V_c_read;
input  [63:0] metadata_strm_V_dout;
input   metadata_strm_V_empty_n;
output   metadata_strm_V_read;
output  [31:0] node_out_strm_V_din;
input   node_out_strm_V_full_n;
output   node_out_strm_V_write;
output  [14:0] wt_address0;
output   wt_ce0;
input  [31:0] wt_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg node_in_strm_V_read;
reg metadata_strm_V_read;
reg node_out_strm_V_write;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    node_in_strm_V_blk_n;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] exitcond5_fu_469_p2;
reg    edge_strm_V_src_V_blk_n;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] exitcond6_fu_506_p2;
reg    edge_strm_V_dst_V_blk_n;
reg    edge_strm_V_c_blk_n;
reg    metadata_strm_V_blk_n;
wire   [0:0] ap_CS_fsm_state8;
reg    node_out_strm_V_blk_n;
wire   [0:0] ap_CS_fsm_state21;
wire   [6:0] dst_1_fu_396_p2;
reg   [6:0] dst_1_reg_599;
wire   [0:0] ap_CS_fsm_state2;
wire   [4:0] indvarinc_fu_402_p2;
reg   [4:0] indvarinc_reg_604;
wire   [0:0] ap_CS_fsm_state3;
wire   [3:0] indvarinc1_fu_408_p2;
wire   [0:0] ap_CS_fsm_state4;
wire   [6:0] src_1_fu_445_p2;
reg   [6:0] src_1_reg_623;
wire   [0:0] ap_CS_fsm_state5;
wire   [15:0] next_mul_fu_451_p2;
reg   [15:0] next_mul_reg_628;
wire   [0:0] ap_CS_fsm_state6;
wire   [5:0] row_2_fu_463_p2;
reg   [5:0] row_2_reg_636;
wire   [10:0] col_2_fu_475_p2;
wire   [31:0] node_in_bram_q0;
reg   [31:0] node_in_bram_load_reg_649;
reg   [31:0] tmp_s_reg_654;
wire   [31:0] i_1_fu_511_p2;
reg   [31:0] i_1_reg_662;
wire    edge_strm_V_c0_status;
reg   [31:0] tmp_c_reg_667;
wire   [4:0] tmp_9_fu_525_p1;
reg   [4:0] tmp_9_reg_672;
wire   [31:0] grp_fu_386_p2;
reg   [31:0] tmp_8_reg_677;
wire   [0:0] ap_CS_fsm_state17;
wire   [5:0] row_1_fu_547_p2;
reg   [5:0] row_1_reg_685;
wire   [0:0] ap_CS_fsm_state19;
wire   [10:0] tmp_9_cast_fu_561_p1;
reg   [10:0] tmp_9_cast_reg_690;
wire   [0:0] exitcond3_fu_541_p2;
wire   [4:0] col_1_fu_571_p2;
reg   [4:0] col_1_reg_698;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] exitcond_fu_565_p2;
reg   [15:0] node_in_bram_address0;
reg    node_in_bram_ce0;
reg    node_in_bram_we0;
reg   [8:0] node_out_bram_address0;
reg    node_out_bram_ce0;
reg    node_out_bram_we0;
reg   [31:0] node_out_bram_d0;
wire   [31:0] node_out_bram_q0;
reg   [6:0] dst_reg_274;
reg   [4:0] invdar_reg_285;
wire   [0:0] tmp_3_fu_433_p2;
wire   [0:0] tmp_2_fu_427_p2;
wire   [0:0] exitcond1_fu_390_p2;
reg   [3:0] invdar1_reg_297;
reg   [6:0] src_reg_308;
reg   [5:0] row_reg_319;
wire   [0:0] exitcond2_fu_439_p2;
reg   [15:0] phi_mul_reg_330;
reg   [10:0] col_reg_342;
wire   [0:0] exitcond4_fu_457_p2;
reg   [31:0] i_reg_353;
wire   [0:0] ap_CS_fsm_state18;
reg   [5:0] row1_reg_364;
reg   [4:0] col2_reg_375;
wire   [63:0] tmp_1_fu_422_p1;
wire   [63:0] tmp_20_cast_fu_491_p1;
wire   [63:0] tmp_11_fu_536_p1;
wire   [63:0] tmp_15_cast_fu_586_p1;
reg    edge_strm_V_c0_update;
wire   [0:0] ap_CS_fsm_state10;
wire   [8:0] tmp_fu_414_p3;
wire   [15:0] tmp_10_cast_fu_481_p1;
wire   [15:0] tmp_13_fu_485_p2;
wire   [8:0] tmp_10_fu_529_p3;
wire   [9:0] tmp_5_fu_553_p3;
wire   [10:0] tmp_cast_fu_577_p1;
wire   [10:0] tmp_6_fu_581_p2;
reg   [20:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'b1;
end

top_node_in_bram #(
    .DataWidth( 32 ),
    .AddressRange( 45856 ),
    .AddressWidth( 16 ))
node_in_bram_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(node_in_bram_address0),
    .ce0(node_in_bram_ce0),
    .we0(node_in_bram_we0),
    .d0(node_in_strm_V_dout),
    .q0(node_in_bram_q0)
);

top_node_out_bram #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
node_out_bram_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(node_out_bram_address0),
    .ce0(node_out_bram_ce0),
    .we0(node_out_bram_we0),
    .d0(node_out_bram_d0),
    .q0(node_out_bram_q0)
);

top_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fadd_32ns_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_c_reg_667),
    .din1(node_in_bram_load_reg_649),
    .ce(1'b1),
    .dout(grp_fu_386_p2)
);

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond3_fu_541_p2))) begin
        col2_reg_375 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_CS_fsm_state21) & ~(node_out_strm_V_full_n == 1'b0))) begin
        col2_reg_375 <= col_1_reg_698;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond4_fu_457_p2))) begin
        col_reg_342 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond5_fu_469_p2 == 1'b0) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)))) begin
        col_reg_342 <= col_2_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == exitcond3_fu_541_p2))) begin
        dst_reg_274 <= dst_1_reg_599;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        dst_reg_274 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_reg_353 <= i_1_reg_662;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(metadata_strm_V_empty_n == 1'b0))) begin
        i_reg_353 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_2_fu_427_p2))) begin
        invdar1_reg_297 <= indvarinc1_fu_408_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar1_reg_297 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == exitcond1_fu_390_p2))) begin
        invdar_reg_285 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_3_fu_433_p2) & ~(1'b0 == tmp_2_fu_427_p2))) begin
        invdar_reg_285 <= indvarinc_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond2_fu_439_p2))) begin
        phi_mul_reg_330 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)) & ~(exitcond5_fu_469_p2 == 1'b0))) begin
        phi_mul_reg_330 <= next_mul_reg_628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == exitcond2_fu_439_p2))) begin
        row1_reg_364 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_state20) & ~(1'b0 == exitcond_fu_565_p2))) begin
        row1_reg_364 <= row_1_reg_685;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond2_fu_439_p2))) begin
        row_reg_319 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)) & ~(exitcond5_fu_469_p2 == 1'b0))) begin
        row_reg_319 <= row_2_reg_636;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_2_fu_427_p2) & ~(1'b0 == tmp_3_fu_433_p2))) begin
        src_reg_308 <= ap_const_lv7_0;
    end else if (((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)) & ~(1'b0 == exitcond6_fu_506_p2))) begin
        src_reg_308 <= src_1_reg_623;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        col_1_reg_698 <= col_1_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        dst_1_reg_599 <= dst_1_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)))) begin
        i_1_reg_662 <= i_1_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc_reg_604 <= indvarinc_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        next_mul_reg_628 <= next_mul_fu_451_p2;
        row_2_reg_636 <= row_2_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(metadata_strm_V_empty_n == 1'b0))) begin
        node_in_bram_load_reg_649 <= node_in_bram_q0;
        tmp_s_reg_654 <= {{metadata_strm_V_dout[ap_const_lv32_3F : ap_const_lv32_20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        row_1_reg_685 <= row_1_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        src_1_reg_623 <= src_1_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_8_reg_677 <= grp_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == exitcond3_fu_541_p2))) begin
        tmp_9_cast_reg_690[9 : 4] <= tmp_9_cast_fu_561_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond6_fu_506_p2) & ~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)))) begin
        tmp_9_reg_672 <= tmp_9_fu_525_p1;
        tmp_c_reg_667 <= edge_strm_V_c_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_fu_390_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == exitcond1_fu_390_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond6_fu_506_p2) & ~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)))) begin
        edge_strm_V_c0_update = 1'b1;
    end else begin
        edge_strm_V_c0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond6_fu_506_p2))) begin
        edge_strm_V_c_blk_n = edge_strm_V_c_empty_n;
    end else begin
        edge_strm_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond6_fu_506_p2))) begin
        edge_strm_V_dst_V_blk_n = edge_strm_V_dst_V_empty_n;
    end else begin
        edge_strm_V_dst_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == exitcond6_fu_506_p2))) begin
        edge_strm_V_src_V_blk_n = edge_strm_V_src_V_empty_n;
    end else begin
        edge_strm_V_src_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        metadata_strm_V_blk_n = metadata_strm_V_empty_n;
    end else begin
        metadata_strm_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(metadata_strm_V_empty_n == 1'b0))) begin
        metadata_strm_V_read = 1'b1;
    end else begin
        metadata_strm_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        node_in_bram_address0 = tmp_20_cast_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        node_in_bram_address0 = ap_const_lv64_0;
    end else begin
        node_in_bram_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state7) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0))))) begin
        node_in_bram_ce0 = 1'b1;
    end else begin
        node_in_bram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond5_fu_469_p2 == 1'b0) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)))) begin
        node_in_bram_we0 = 1'b1;
    end else begin
        node_in_bram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond5_fu_469_p2 == 1'b0))) begin
        node_in_strm_V_blk_n = node_in_strm_V_empty_n;
    end else begin
        node_in_strm_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond5_fu_469_p2 == 1'b0) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)))) begin
        node_in_strm_V_read = 1'b1;
    end else begin
        node_in_strm_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        node_out_bram_address0 = tmp_15_cast_fu_586_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        node_out_bram_address0 = tmp_11_fu_536_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        node_out_bram_address0 = tmp_1_fu_422_p1;
    end else begin
        node_out_bram_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18))) begin
        node_out_bram_ce0 = 1'b1;
    end else begin
        node_out_bram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        node_out_bram_d0 = tmp_8_reg_677;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        node_out_bram_d0 = ap_const_lv32_0;
    end else begin
        node_out_bram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18))) begin
        node_out_bram_we0 = 1'b1;
    end else begin
        node_out_bram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        node_out_strm_V_blk_n = node_out_strm_V_full_n;
    end else begin
        node_out_strm_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & ~(node_out_strm_V_full_n == 1'b0))) begin
        node_out_strm_V_write = 1'b1;
    end else begin
        node_out_strm_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == exitcond1_fu_390_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~(1'b0 == tmp_2_fu_427_p2) & ~(1'b0 == tmp_3_fu_433_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b0 == tmp_3_fu_433_p2) & ~(1'b0 == tmp_2_fu_427_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(1'b0 == exitcond2_fu_439_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((1'b0 == exitcond4_fu_457_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)) & ~(exitcond5_fu_469_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((exitcond5_fu_469_p2 == 1'b0) & ~((exitcond5_fu_469_p2 == 1'b0) & (node_in_strm_V_empty_n == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (~(metadata_strm_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)) & ~(1'b0 == exitcond6_fu_506_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b0 == exitcond6_fu_506_p2) & ~((1'b0 == exitcond6_fu_506_p2) & (edge_strm_V_c0_status == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state19 : begin
            if (~(1'b0 == exitcond3_fu_541_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (~(1'b0 == exitcond_fu_565_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (~(node_out_strm_V_full_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign col_1_fu_571_p2 = (col2_reg_375 + ap_const_lv5_1);

assign col_2_fu_475_p2 = (col_reg_342 + ap_const_lv11_1);

assign dst_1_fu_396_p2 = (dst_reg_274 + ap_const_lv7_1);

assign edge_strm_V_c0_status = (edge_strm_V_src_V_empty_n & edge_strm_V_dst_V_empty_n & edge_strm_V_c_empty_n);

assign edge_strm_V_c_read = edge_strm_V_c0_update;

assign edge_strm_V_dst_V_read = edge_strm_V_c0_update;

assign edge_strm_V_src_V_read = edge_strm_V_c0_update;

assign exitcond1_fu_390_p2 = ((dst_reg_274 == ap_const_lv7_55) ? 1'b1 : 1'b0);

assign exitcond2_fu_439_p2 = ((src_reg_308 == ap_const_lv7_55) ? 1'b1 : 1'b0);

assign exitcond3_fu_541_p2 = ((row1_reg_364 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond4_fu_457_p2 = ((row_reg_319 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond5_fu_469_p2 = ((col_reg_342 == ap_const_lv11_599) ? 1'b1 : 1'b0);

assign exitcond6_fu_506_p2 = ((i_reg_353 == tmp_s_reg_654) ? 1'b1 : 1'b0);

assign exitcond_fu_565_p2 = ((col2_reg_375 == ap_const_lv5_10) ? 1'b1 : 1'b0);

assign i_1_fu_511_p2 = (i_reg_353 + ap_const_lv32_1);

assign indvarinc1_fu_408_p2 = (invdar1_reg_297 + ap_const_lv4_1);

assign indvarinc_fu_402_p2 = (invdar_reg_285 + ap_const_lv5_1);

assign next_mul_fu_451_p2 = (phi_mul_reg_330 + ap_const_lv16_599);

assign node_out_strm_V_din = node_out_bram_q0;

assign row_1_fu_547_p2 = (row1_reg_364 + ap_const_lv6_1);

assign row_2_fu_463_p2 = (row_reg_319 + ap_const_lv6_1);

assign src_1_fu_445_p2 = (src_reg_308 + ap_const_lv7_1);

assign tmp_10_cast_fu_481_p1 = col_reg_342;

assign tmp_10_fu_529_p3 = {{tmp_9_reg_672}, {ap_const_lv4_0}};

assign tmp_11_fu_536_p1 = tmp_10_fu_529_p3;

assign tmp_13_fu_485_p2 = (phi_mul_reg_330 + tmp_10_cast_fu_481_p1);

assign tmp_15_cast_fu_586_p1 = tmp_6_fu_581_p2;

assign tmp_1_fu_422_p1 = tmp_fu_414_p3;

assign tmp_20_cast_fu_491_p1 = tmp_13_fu_485_p2;

assign tmp_2_fu_427_p2 = ((invdar1_reg_297 == ap_const_lv4_F) ? 1'b1 : 1'b0);

assign tmp_3_fu_433_p2 = ((invdar_reg_285 == ap_const_lv5_1F) ? 1'b1 : 1'b0);

assign tmp_5_fu_553_p3 = {{row1_reg_364}, {ap_const_lv4_0}};

assign tmp_6_fu_581_p2 = (tmp_9_cast_reg_690 + tmp_cast_fu_577_p1);

assign tmp_9_cast_fu_561_p1 = tmp_5_fu_553_p3;

assign tmp_9_fu_525_p1 = edge_strm_V_dst_V_dout[4:0];

assign tmp_cast_fu_577_p1 = col2_reg_375;

assign tmp_fu_414_p3 = {{invdar_reg_285}, {invdar1_reg_297}};

assign wt_address0 = ap_const_lv15_0;

assign wt_ce0 = 1'b0;

always @ (posedge ap_clk) begin
    tmp_9_cast_reg_690[3:0] <= 4'b0000;
    tmp_9_cast_reg_690[10] <= 1'b0;
end

endmodule //top
